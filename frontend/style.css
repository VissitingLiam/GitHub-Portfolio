body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
    margin: 0;
    padding: 0;
    background: #f4f4f4;
    color: #333;
}

header {
    background: #333;
    color: #fff;
    padding: 1rem 0;
    text-align: center;

    position: relative; /* Needed for absolute positioning of the background */
    overflow: hidden; /* Hide parts of Legos that go outside */
    min-height: 150px; /* Ensure header has enough height for background */
    display: flex; /* Use flexbox to center content */
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1; /* Ensure header content is above background */
}

header h1, header p {
    position: relative; /* Ensure text stays above the Lego background */
    z-index: 2; /* Higher z-index than the background */
    color: #fff; /* Ensure text is visible */
    text-shadow: 0 0 5px rgba(0,0,0,0.5); /* Add a slight shadow for readability */
}

section {
    padding: 20px;
    margin: 0 20px;
    background: #fff;
    border-bottom: 1px solid #ddd;
}

h1, h2 {
    color: #007bff;
}

/* Lego Header Background */
.header-lego-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    /* Adjust grid density for header background */
    grid-template-columns: repeat(auto-fill, minmax(25px, 1fr));
    grid-template-rows: repeat(auto-fill, minmax(25px, 1fr));
    gap: 1px;
    pointer-events: none; /* Allows clicks to pass through */
    overflow: hidden;
    z-index: 0; /* Ensures it's behind header text */
}

.header-lego-brick {
    width: 100%;
    height: 100%;
    background-color: var(--lego-color, #555); /* Default darker for background */
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: inset 0 0 3px rgba(255, 255, 255, 0.1); /* Subtle inner shadow */
    position: relative;
    border-radius: 2px;

    /* Animation properties */
    animation: waveFlow 4s ease-in-out infinite alternate; /* Loop continuously */
}

/* Pseudo-element for the Lego stud on top of each header brick */
.header-lego-brick::before {
    content: '';
    position: absolute;
    top: 20%;
    left: 20%;
    width: 60%;
    height: 60%;
    background-color: inherit;
    border-radius: 50%;
    box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.2);
    transform: translateZ(2px); /* Smaller stud depth */
    border: 1px solid rgba(0, 0, 0, 0.05);
}

/* Keyframes for the wave animation */
@keyframes waveFlow {
    0% {
        transform: translateY(0) scale(1);
        opacity: 0.7;
    }
    50% {
        transform: translateY(-10px) scale(1.1); /* Move up slightly, scale up */
        opacity: 1;
    }
    100% {
        transform: translateY(0) scale(1);
        opacity: 0.7;
    }
}



/* Lego hover section*/
/* Styles for the hover section and Lego grid*/
.hover-section {
    position: relative;
    width: 100%; /* Ensure it takes full width of its parent */
    height: 300px; /* Fixed height for the animation area */
    background-color: #e0e0e0;
    margin: 50px auto;
    overflow: hidden; /* Crucial to hide bricks outside the section */
    perspective: 1000px; /* Establishes 3D space for children */
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border-radius: 0.5rem; /* Tailwind's rounded-lg */
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); /* Tailwind's shadow-xl */
    transition: all 0.3s ease-in-out; /* Smooth transition for section itself */
}

/* Styles for the container that holds the dynamically created Lego bricks */
.lego-grid-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    /* Adjust grid density here. Each 'fr' unit takes equal space. */
    /* Example: 20px min size, then fill space */
    grid-template-columns: repeat(auto-fill, minmax(18px, 1fr));
    grid-template-rows: repeat(auto-fill, minmax(18px, 1fr));
    gap: 2px; /* Small gap between bricks */
    pointer-events: none; /* VERY IMPORTANT: Allows mouse events to pass through to .hover-section */
    transform-style: preserve-3d; /* Children inherit 3D context */
    overflow: hidden; /* Just in case, though parent has it */
}

/* Styles for individual Lego bricks */
.lego-brick {
    width: 100%; /* Fill grid cell */
    height: 100%; /* Fill grid cell */
    background-color: var(--lego-color, #007bff); /* Default blue, overridden by JS */
    border: 1px solid rgba(0, 0, 0, 0.15);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    
    transform-style: preserve-3d; /* For the stud effect */
    position: relative;
    border-radius: 3px; /* Slightly rounded corners for brick */

    /* Initial state: hidden, scaled down, rotated, and translated off-screen */
    opacity: 0;
    transform: scale(0.1) rotateX(180deg) rotateY(180deg) translateZ(-200px); 
    transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94), opacity 0.5s ease-out; /* Smooth animation */
}

/* Pseudo-element for the Lego stud on top of each brick */
.lego-brick::before {
    content: '';
    position: absolute;
    top: 20%; /* Position the stud */
    left: 20%; /* Position the stud */
    width: 60%; /* Size of the stud */
    height: 60%; /* Size of the stud */
    background-color: inherit; /* Inherit the brick's color */
    border-radius: 50%; /* Make it round */
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2); /* Inner shadow for depth */
    transform: translateZ(5px); /* Push the stud forward in 3D space */
    border: 1px solid rgba(0, 0, 0, 0.1);
}

/* Hover state for the bricks - triggered when the parent .hover-section is hovered */
.lego-brick--active {
    opacity: 1; /* Make visible */
    transform: scale(1) rotateX(0deg) rotateY(0deg) translateZ(0); /* Animate to final position */
}

/* Optional: Style the text on hover */
.hover-section:hover h2 {
    color: rgb(151, 15, 15); /* Change text color */
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.7); /* Add glow */
}